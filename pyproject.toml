[build-system]
requires = [
    "hatchling",
    "hatch-gradle-version>=0.9.8",
]
build-backend = "hatchling.build"

# project metadata

[project]
name = "hexdoc-hexfuncs"
description = "Hexfuncs adds pure multivariate function iotas to hexcasting"
readme = "doc/README.md"
authors = [
    { name="sky3n3t" },
]
keywords = ["hexdoc"]
requires-python = ">=3.11"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://sky3n3t.github.io/hexfuncs"
Source = "https://github.com/sky3n3t/hexfuncs"

# Gradle version/deps

[tool.hatch.version]
scheme = "gradle"
source = "gradle-properties"
py-path = "doc/src/hexdoc_hexfuncs/__version__.py"
key = "modVersion"
gradle-version-regex = { regex='^(.+?)(-.+)?$', repl='\1.{minecraftVersion}\2' }

[tool.hatch.metadata.hooks.version-catalog]
dependencies = [
    { package="hexdoc-hexcasting", op="~=", py-version="1.0", key="hexcasting" },
]

[tool.hatch.metadata.hooks.version-catalog.optional-dependencies]
dev = [
    "ruff~=0.11.13",
]

# directory inclusion

[tool.hatch.build]
only-include = [
    "doc/src/hexdoc_hexfuncs",
    "gradle.properties",
]
artifacts = [
    "/doc/src/hexdoc_hexfuncs/_export/generated",
    "/doc/src/hexdoc_hexfuncs/__gradle_version__.py",
]

[tool.hatch.build.targets.wheel]
sources = ["doc/src"]

# hexdoc entry points

[project.entry-points.hexdoc]
hexfuncs = "hexdoc_hexfuncs._hooks:HexfuncsPlugin"

# linting

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "All"

include = ["doc/src"]
extraPaths = ["doc/src"]

typeCheckingMode = "basic"

strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportMissingTypeStubs = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"
